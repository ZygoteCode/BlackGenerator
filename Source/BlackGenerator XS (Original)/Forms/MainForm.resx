<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2BorderlessForm1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2Button4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAABGpJREFUeF7t
        mTGSHEUQRdcggGPhcgCQTG6BCTfBR8LB2MDTKTDQGBxF6LdeidXE393snK5UdytfxDM0f/pXVtVoV7u6
        a5qmaZqmaZpmFd/fX76R/LGp5Iff//76xeu3f773r59++/dbXm4qeHD477AvoQpz+H0JVTxx+MO+hFkE
        Dn/Yl7A1Kw5/2JewFYnDH/Yl3MoNhz/sS8iiH7BevL7cm0N9oPLn39M/rK0k+MlfPt1r3kt98xSZA+1L
        2IhbDrIv4Ua2OMC+hCRbHtwWXeb9i8TnYsan9tZO895F4vMw80vGLd3mfYvE52Dm4Q+ya5j3LBIfn4rD
        H2TWMvki8bGpPPzB2jVNtriUHZnPcfiDNWub1xepOibR3+3M/L1N/PdL7vUDX8Dn/ORfE5zFSsWx2NPh
        D7KXwOPHYY+HP8hcAo8egz0f/mDtJfDY/jnC4Q/WXAKP7Js9/GtnLbGZ377b08yWI33yrzny7AuH38B7
        DruHMxz+4HB7OdPhDw6zpzMe/mD3ezvz4Q92u8cv4fAHu9vrl3T4g93s+TQ/sCT4sHe/3/+d+ANm8FOw
        yCOnw+3VuP3fhDWHL3nsdLi9PuJ2l7D28CWPng631ye8/RIyhy95/HS4vT5j/hK+e/Pmq8g3XCcVp8Pt
        9Xkv9zpLKtbx8tU/v/pSecL/vH4Gt9cPPn4WOkMez/Hy1eVnU7z81TKvL/Lo6XB7lY99qf7xj8svPHob
        V5fw8evag9c+cXkoievbUpZJ4fqksutL2OzwB1zCJ99UxmLXEqdwfVvKMilcnyT+eAmbH/7g+pvJ9SBD
        4hSub0tZJoXrk8QL6W+4GdwwkjiF69tSlknh+iRxPW4YSZzC9W0py6RwfZK4HjeMJE7h+raUZVK4Pklc
        jxtGEqdwfZI4jOuQxClcnySuxw0jiVO4PkkcxnVI4hSuTxLX44aRxClcnyQO4zokcQrXJ4nrccNI4hSu
        TxKHcR2SOIXrk8T1uGEkcQrXJ4nDuA5JnML1SeJ63DCSOIXrk8RhXIckTuH6JHE9bhhJnML1SeIwrkMS
        p3B9krgeN4wkTuH6JHEY1yGJU7g+SVyPG0YSp3B9kjiM65DEKVyfJK7HDSOJU7g+SRzGdUjiFK5PEtfj
        hpHEKVyfJA7jOiRxCtcnietxw0jiFK5PEodxHZI4heuTxPW4YSRxCtcnicO4DkmcwvVJ4nrcMJI4heuT
        xGFchyRO4fokcT1uGEmcwvVJ4jCuQxKncH2SuB43jCRO4fokcRjXIYlTuD5JXI8bRhKncH2SOIzrkMQp
        XJ8krscNI4lTuD5JHMZ1SOIUrk8S1+OGkcQpXJ8kDuM6JHEK1yeJ63HDSOIUrk8Sh3EdkjiF65PE9bhh
        JHEK1yeJw7gOSZzC9Unietwws2TJMK5jlixZjxtmliwZxnXMkiXrccPMkiXDuI5ZsmQ9bphZsmQY1zFL
        lqzHDTNLlgzjOmbJkvW4YWbJkmFcxyxZsmmapmmapmmapmmapmme4O7uPxAjtcZQYG6sAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>